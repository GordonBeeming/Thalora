name: End-to-End Tests

on:
  push:
    branches: [ main, develop, "copilot/*" ]
  pull_request:
    branches: [ main, develop ]

jobs:
  e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: thalora-frontend/package-lock.json

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Install frontend dependencies
      working-directory: ./thalora-frontend
      run: pnpm install

    - name: Install Playwright Browsers
      working-directory: ./thalora-frontend
      run: npx playwright install --with-deps

    - name: Set up SQL Server
      run: |
        docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=YourTestPassword123!' \
          -p 1433:1433 --name sqlserver-test \
          -d mcr.microsoft.com/mssql/server:2022-latest
        
        # Wait for SQL Server to be ready
        timeout 60 bash -c 'until docker exec sqlserver-test /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "YourTestPassword123!" -Q "SELECT 1" > /dev/null 2>&1; do sleep 2; done'

    - name: Build backend
      working-directory: ./backend
      run: cargo build --release

    - name: Start backend in test mode
      working-directory: ./backend
      env:
        DATABASE_URL: "Server=localhost,1433;Database=ThaloraTestDB;User=sa;Password=YourTestPassword123!;TrustServerCertificate=true;"
        TEST_MODE: "true"
        SKIP_DOMAIN_VERIFICATION: "true"
        RUST_LOG: "info"
      run: |
        cargo run --release &
        echo $! > backend.pid
        
        # Wait for backend to be ready
        timeout 60 bash -c 'until curl -f http://localhost:8080/health > /dev/null 2>&1; do sleep 2; done'

    - name: Build frontend
      working-directory: ./thalora-frontend
      run: pnpm run build

    - name: Start frontend
      working-directory: ./thalora-frontend
      run: |
        pnpm start &
        echo $! > frontend.pid
        
        # Wait for frontend to be ready
        timeout 60 bash -c 'until curl -f http://localhost:3000 > /dev/null 2>&1; do sleep 2; done'

    - name: Run Playwright tests
      working-directory: ./thalora-frontend
      env:
        CI: true
      run: npx playwright test --reporter=html

    - name: Upload Playwright Report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: thalora-frontend/playwright-report/
        retention-days: 30

    - name: Upload Test Results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: thalora-frontend/test-results/
        retention-days: 30

    - name: Cleanup
      if: always()
      run: |
        if [ -f ./thalora-frontend/frontend.pid ]; then
          kill $(cat ./thalora-frontend/frontend.pid) || true
        fi
        if [ -f ./backend/backend.pid ]; then
          kill $(cat ./backend/backend.pid) || true
        fi
        docker stop sqlserver-test || true
        docker rm sqlserver-test || true